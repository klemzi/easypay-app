---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-network-policy
  namespace: easypay
spec:
  podSelector:
    matchLabels:
      role: db
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              project: easypay
        - podSelector:
            matchLabels:
              role: frontend
      ports:
        - protocol: TCP
          port: 3306

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: easypay
spec:
  ports:
  - port: 3306
  selector:
    role: db
  clusterIP: None

---

# MYSQL deployment yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: easypay
    role: db
  namespace: easypay
spec:
  selector:
    matchLabels:
      app: easypay
      role: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: easypay
        role: db
    spec:
      containers:
        - image: mysql:8.0
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: easypay-secrets
                  key: mysql-root-pwd
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: easypay-secrets
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: easypay-secrets
                  key: mysql-pwd
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: easypay-config
                  key: DB_NAME
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-store
              mountPath: /var/lib/mysql
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          startupProbe:
            failureThreshold: 10
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"          
      volumes:
        - name: mysql-store
          emptyDir: {}
